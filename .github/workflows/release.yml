name: Release

on:
    push:
        tags:
            - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        steps:
            # test - start
            # setup bun - start
            - name: Checkout
              uses: actions/checkout@v3

            - uses: oven-sh/setup-bun@v1
              with:
                  bun-version: 1.0.19

            - name: Get bun store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$HOME/.bun/install/cache" >> $GITHUB_ENV

            - uses: actions/cache@v3
              name: Setup bun cache
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-${{ env.cache-name }}-bun-store-${{ hashFiles('**/bun.lockb') }}

            - name: Install dependencies
              run: bun install --production --frozen-lockfile --cache-dir $STORE_PATH
            # setup bun - end

            - name: Check types
              run: bun run tsc
            # test - end

            # build - start
            - name: Build
              run: bun run build
            # build - end

            # docker publish - start
            - name: Login to Yandex Cloud Container Registry
              id: login-cr
              uses: yc-actions/yc-cr-login@v1
              with:
                  yc-sa-json-credentials: ${{ secrets.YA_CLOUD_LOGIN_KEY }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Pack to container and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: cr.yandex/${{ secrets.YA_CLOUD_REGISTRY }}/dubnahirudo:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  provenance: false
            # docker publish - end

    remote-deploy:
        runs-on: ubuntu-latest
        needs: [build-and-publish]
        steps:
            - name: executing remote ssh commands using password
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.YA_CLOUD_PROD_HOST }}
                  username: ${{ secrets.YA_CLOUD_PROD_USERNAME }}
                  key: ${{ secrets.YA_CLOUD_PROD_KEY }}
                  port: ${{ secrets.YA_CLOUD_PROD_PORT }}
                  script: |
                      if [ -x "$(command -v docker)" ]; then
                        echo "Docker is already installed"
                      else
                        curl -fsSL https://get.docker.com -o get-docker.sh
                        sh get-docker.sh

                        sudo systemctl enable docker
                        sudo systemctl start docker
                        sudo chmod 666 /var/run/docker.sock
                      fi

                      # Install docker-compose if not present
                      if [ -x "$(command -v docker-compose)" ]; then
                        echo "Docker Compose is already installed"
                      else
                        echo "Installing Docker Compose..."
                        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                        sudo chmod +x /usr/local/bin/docker-compose
                        echo "Docker Compose installed successfully"
                      fi

                      echo '${{ secrets.YA_CLOUD_LOGIN_KEY }}' | docker login --username json_key --password-stdin cr.yandex

                      # Stop existing containers
                      docker-compose down || true

                      # Create .env file for SSL configuration
                      cat > .env << EOF
                      DOMAIN=www.dubna-hirudo.ru
                      EMAIL=admin@dubna-hirudo.ru
                      DOCKER_IMAGE=cr.yandex/${{ secrets.YA_CLOUD_REGISTRY }}/dubnahirudo:${{ github.sha }}
                      EOF

                       # Download latest docker-compose.yml
                       curl -o docker-compose.yml https://raw.githubusercontent.com/levabala/dubnahirudo/main/docker-compose.yml
                       curl -o init-letsencrypt.sh https://raw.githubusercontent.com/levabala/dubnahirudo/main/init-letsencrypt.sh
                       chmod +x init-letsencrypt.sh                      # Pull new image
                      docker pull cr.yandex/${{ secrets.YA_CLOUD_REGISTRY }}/dubnahirudo:${{ github.sha }}

                      # Initialize SSL certificates if needed
                      if [ ! -d "./certbot/conf/live/www.dubna-hirudo.ru" ]; then
                        ./init-letsencrypt.sh
                      fi

                      # Start services
                      docker-compose up -d
