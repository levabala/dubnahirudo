name: Release

on:
    push:
        tags:
            - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        steps:
            # test - start
            # setup bun - start
            - name: Checkout
              uses: actions/checkout@v3

            - uses: oven-sh/setup-bun@v1
              with:
                bun-version: latest

            - name: Install dependencies
              run: bun install --production --frozen-lockfile
            # setup bun - end

            - name: Check types
              run: bun run tsc
            # test - end

            # build - start
            - name: Build
              run: bun run build
            # build - end

            # docker publish - start
            - name: Login to Yandex Cloud Container Registry
              id: login-cr
              uses: yc-actions/yc-cr-login@v1
              with:
                  yc-sa-json-credentials: ${{ secrets.YA_CLOUD_LOGIN_KEY }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Pack to container and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: cr.yandex/${{ secrets.YA_CLOUD_REGISTRY }}/dubnahirudo:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  provenance: false
            # docker publish - end

    remote-deploy:
        runs-on: ubuntu-latest
        needs: [build-and-publish]
        steps:
            - name: executing remote ssh commands using password
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.YA_CLOUD_PROD_HOST }}
                  username: ${{ secrets.YA_CLOUD_PROD_USERNAME }}
                  key: ${{ secrets.YA_CLOUD_PROD_KEY }}
                  port: ${{ secrets.YA_CLOUD_PROD_PORT }}
                  script: |
                      if [ -x "$(command -v docker)" ]; then
                        echo "Docker is already installed"
                      else
                        curl -fsSL https://get.docker.com -o get-docker.sh
                        sh get-docker.sh

                        sudo systemctl enable docker
                        sudo systemctl start docker
                        sudo chmod 666 /var/run/docker.sock
                      fi

                      echo '${{ secrets.YA_CLOUD_LOGIN_KEY }}' | docker login --username json_key --password-stdin cr.yandex

                      CONTAINER_ID=$(docker container ls  | grep 'dubnahirudo' | awk '{print $1}')
                      if [ $CONTAINER_ID ]; then
                        docker stop $CONTAINER_ID
                      fi

                      docker pull cr.yandex/${{ secrets.YA_CLOUD_REGISTRY }}/dubnahirudo:${{ github.sha }}
                      docker run -d -p 80:80 cr.yandex/${{ secrets.YA_CLOUD_REGISTRY }}/dubnahirudo:${{ github.sha }}
